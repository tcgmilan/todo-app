{"ast":null,"code":"import _toConsumableArray from\"/Users/tcgmilan/Programming/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/tcgmilan/Programming/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import TodoForm from'./TodoForm';import Todo from'./Todo';function TodoList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var addTodo=function addTodo(todo){var _console;if(!todo.text||/^\\s*$/.test(todo.text)){return;}var newTodos=[todo].concat(_toConsumableArray(todos));setTodos(newTodos);(_console=console).log.apply(_console,_toConsumableArray(todos));};var updateTodo=function updateTodo(todoId,newValue){if(!newValue.text||/^\\s*$/.test(newValue.text)){return;}setTodos(function(prev){return prev.map(function(item){return item.id===todoId?newValue:item;});});};var removeTodo=function removeTodo(id){var removedArr=_toConsumableArray(todos).filter(function(todo){return todo.id!==id;});setTodos(removedArr);};var completeTodo=function completeTodo(id){var updatedTodos=todos.map(function(todo){if(todo.id===id){todo.isComplete=!todo.isComplete;}return todo;});setTodos(updatedTodos);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",null,\"\\uD83D\\uDDD3 Mik A Terveid M\\xE1ra?\"),/*#__PURE__*/React.createElement(TodoForm,{onSubmit:addTodo}),/*#__PURE__*/React.createElement(Todo,{todos:todos,completeTodo:completeTodo,removeTodo:removeTodo,updateTodo:updateTodo}));}export default TodoList;","map":{"version":3,"sources":["/Users/tcgmilan/Programming/todo-app/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","console","log","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removedArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":"8TAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,QAASC,CAAAA,QAAT,EAAoB,CAClB,cAA0BH,QAAQ,CAAC,EAAD,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,IAAI,CAAI,cACtB,GAAI,CAACA,IAAI,CAACC,IAAN,EAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,CAA2C,CACzC,OACD,CAED,GAAME,CAAAA,QAAQ,EAAIH,IAAJ,4BAAaH,KAAb,EAAd,CAEAC,QAAQ,CAACK,QAAD,CAAR,CACA,UAAAC,OAAO,EAACC,GAAR,mCAAeR,KAAf,GACD,CATD,CAWA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAASC,QAAT,CAAsB,CACvC,GAAI,CAACA,QAAQ,CAACP,IAAV,EAAkB,QAAQC,IAAR,CAAaM,QAAQ,CAACP,IAAtB,CAAtB,CAAmD,CACjD,OACD,CAEDH,QAAQ,CAAC,SAAAW,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,CAAS,SAAAC,IAAI,QAAKA,CAAAA,IAAI,CAACC,EAAL,GAAYL,MAAZ,CAAqBC,QAArB,CAAgCG,IAArC,EAAb,CAAJ,EAAL,CAAR,CACD,CAND,CAQA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAD,EAAE,CAAI,CACvB,GAAME,CAAAA,UAAU,CAAG,mBAAIjB,KAAJ,EAAWkB,MAAX,CAAkB,SAAAf,IAAI,QAAIA,CAAAA,IAAI,CAACY,EAAL,GAAYA,EAAhB,EAAtB,CAAnB,CAEAd,QAAQ,CAACgB,UAAD,CAAR,CACD,CAJD,CAMA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAJ,EAAE,CAAI,CACzB,GAAIK,CAAAA,YAAY,CAAGpB,KAAK,CAACa,GAAN,CAAU,SAAAV,IAAI,CAAI,CACnC,GAAIA,IAAI,CAACY,EAAL,GAAYA,EAAhB,CAAoB,CAClBZ,IAAI,CAACkB,UAAL,CAAkB,CAAClB,IAAI,CAACkB,UAAxB,CACD,CACD,MAAOlB,CAAAA,IAAP,CACD,CALkB,CAAnB,CAMAF,QAAQ,CAACmB,YAAD,CAAR,CACD,CARD,CAUA,mBACE,qDACE,oEADF,cAEE,oBAAC,QAAD,EAAU,QAAQ,CAAElB,OAApB,EAFF,cAGE,oBAAC,IAAD,EACE,KAAK,CAAEF,KADT,CAEE,YAAY,CAAEmB,YAFhB,CAGE,UAAU,CAAEH,UAHd,CAIE,UAAU,CAAEP,UAJd,EAHF,CADF,CAYD,CAED,cAAeV,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <h1>ðŸ—“ Mik A Terveid MÃ¡ra?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}